@page "/alltransactions/new/{id:int}"
@inject TransactionService service
@inject NavigationManager navManager

<div class="row m-3">
    <EditForm Model="newTransaction">
        <DataAnnotationsValidator/>
        <div class="mb-3">
            @if (Id > 0)
            {
                <button class="btn btn-primary" @onclick="AddTransaction">Update</button>
            }
            else
            {
                <button class="btn btn-primary" @onclick="AddTransaction">Add</button>
            }
            <button class="btn btn-secondary" @onclick="ToAll">Cancel</button>
        </div>
        

        <label for="description">Description</label>
        <InputText id="description" class="form-control" @bind-Value="@newTransaction.Description" />



        <label for="type">Type</label>
        <InputSelect id="type" class="form-control" @bind-Value="@newTransaction.Type">
            @foreach (var option in Enum.GetValues(typeof(TransactionType)))
            {
                <option>@option</option>
            }
        </InputSelect>

        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" class="form-control" @bind-Value="@newTransaction.Quantity" />

        <label for="amount">Amount</label>
        <InputNumber id="amount" class="form-control" @bind-Value="@newTransaction.Amount" />


    </EditForm>

        
</div>

@code {

    [Parameter]
    public int? Id { get; set; }
    private Transaction newTransaction { get; set; } = new Transaction();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (Id > 0)
        {
            newTransaction = service.GetTransactionById(Id.Value);
        }
    }

    private async Task AddTransaction()
    {
        await service.AddTransactionAsync(newTransaction);
        navManager.NavigateTo("/alltransactions/");
    }

    private void ToAll()
    {
        navManager.NavigateTo("/alltransactions", true);
    }
}
